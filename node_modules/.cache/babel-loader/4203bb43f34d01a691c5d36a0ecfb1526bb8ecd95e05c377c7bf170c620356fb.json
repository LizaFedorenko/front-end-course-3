{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\my-react-app\\\\src\\\\components\\\\Moon.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MoonPhase = () => {\n  _s();\n  const [moonData, setMoonData] = useState(null);\n  const [date, setDate] = useState(new Date().toISOString().split(\"T\")[0]);\n  useEffect(() => {\n    axios.get(`http://localhost:3001/moonphase?startdate=${date}`).then(response => {\n      if (response.data) {\n        console.log(\"Moon phase data:\", response.data);\n        setMoonData(response.data); // Set state only if data exists\n      } else {\n        console.log(\"No data received\");\n      }\n    }).catch(error => {\n      var _error$response;\n      console.error(\"Error fetching moon phase:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    });\n  }, [date]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"moon\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Choose a date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"phases\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: date,\n          onChange: e => setDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this), moonData ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Moon Phase: \", moonData.moonPhase]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 63\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(MoonPhase, \"Wee2QMhAgeGAjTPnHlnSeay4Cjo=\");\n_c = MoonPhase;\nexport default MoonPhase;\nvar _c;\n$RefreshReg$(_c, \"MoonPhase\");","map":{"version":3,"names":["useEffect","useState","axios","jsxDEV","_jsxDEV","MoonPhase","_s","moonData","setMoonData","date","setDate","Date","toISOString","split","get","then","response","data","console","log","catch","error","_error$response","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","class","type","value","onChange","e","target","moonPhase","_c","$RefreshReg$"],"sources":["C:/Users/admin/my-react-app/src/components/Moon.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst MoonPhase = () => {\r\n  const [moonData, setMoonData] = useState(null);\r\n  const [date, setDate] = useState(new Date().toISOString().split(\"T\")[0]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://localhost:3001/moonphase?startdate=${date}`)\r\n      .then((response) => {\r\n        if (response.data) {\r\n          console.log(\"Moon phase data:\", response.data);\r\n          setMoonData(response.data); // Set state only if data exists\r\n        } else {\r\n          console.log(\"No data received\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching moon phase:\", error.response?.data || error.message);\r\n      });\r\n  }, [date]);\r\n  \r\n  \r\n  \r\n\r\n  return (\r\n    <div className=\"moon\">\r\n      <div>\r\n        <h2>Choose a date:</h2>\r\n        <div class = \"phases\">\r\n        <input type=\"date\" value={date} onChange={(e) => setDate(e.target.value)} />\r\n        {moonData ? <p>Moon Phase: {moonData.moonPhase}</p> : <p>Loading...</p>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoonPhase;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAIU,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EAExEb,SAAS,CAAC,MAAM;IACdE,KAAK,CACFY,GAAG,CAAC,6CAA6CL,IAAI,EAAE,CAAC,CACxDM,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAIA,QAAQ,CAACC,IAAI,EAAE;QACjBC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,QAAQ,CAACC,IAAI,CAAC;QAC9CT,WAAW,CAACQ,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;MAC9B,CAAC,MAAM;QACLC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;MACjC;IACF,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAAA,IAAAC,eAAA;MAChBJ,OAAO,CAACG,KAAK,CAAC,4BAA4B,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACL,QAAQ,cAAAM,eAAA,uBAAdA,eAAA,CAAgBL,IAAI,KAAII,KAAK,CAACE,OAAO,CAAC;IACpF,CAAC,CAAC;EACN,CAAC,EAAE,CAACd,IAAI,CAAC,CAAC;EAKV,oBACEL,OAAA;IAAKoB,SAAS,EAAC,MAAM;IAAAC,QAAA,eACnBrB,OAAA;MAAAqB,QAAA,gBACErB,OAAA;QAAAqB,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvBzB,OAAA;QAAK0B,KAAK,EAAG,QAAQ;QAAAL,QAAA,gBACrBrB,OAAA;UAAO2B,IAAI,EAAC,MAAM;UAACC,KAAK,EAAEvB,IAAK;UAACwB,QAAQ,EAAGC,CAAC,IAAKxB,OAAO,CAACwB,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAC3EtB,QAAQ,gBAAGH,OAAA;UAAAqB,QAAA,GAAG,cAAY,EAAClB,QAAQ,CAAC6B,SAAS;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,gBAAGzB,OAAA;UAAAqB,QAAA,EAAG;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACvB,EAAA,CAlCID,SAAS;AAAAgC,EAAA,GAAThC,SAAS;AAoCf,eAAeA,SAAS;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}