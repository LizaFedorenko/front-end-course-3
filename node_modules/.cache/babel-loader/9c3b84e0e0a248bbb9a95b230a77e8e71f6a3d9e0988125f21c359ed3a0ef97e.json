{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\my-react-app\\\\src\\\\components\\\\Planets.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport \"../style.css\";\nimport mercuryImg from \"../assets/Mercury.jpg\";\nimport venusImg from \"../assets/venus.jpg\";\nimport earthImg from \"../assets/earth.jpg\";\nimport marsImg from \"../assets/mars.jpg\";\nimport jupiterImg from \"../assets/jupiter.jpg\";\nimport saturnImg from \"../assets/saturn.jpg\";\nimport uranusImg from \"../assets/uranus.jpg\";\nimport neptuneImg from \"../assets/neptune.jpg\";\nimport plutoImg from \"../assets/pluto.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst planetInfo = {\n  mercury: {\n    desc: \"Mercury is the smallest planet.\",\n    img: mercuryImg\n  },\n  venus: {\n    desc: \"Venus has a thick atmosphere.\",\n    img: venusImg\n  },\n  earth: {\n    desc: \"Earth supports life.\",\n    img: earthImg\n  },\n  mars: {\n    desc: \"Mars is the Red Planet.\",\n    img: marsImg\n  },\n  jupiter: {\n    desc: \"Jupiter is the biggest planet.\",\n    img: jupiterImg\n  },\n  saturn: {\n    desc: \"Saturn has beautiful rings.\",\n    img: saturnImg\n  },\n  uranus: {\n    desc: \"Uranus rotates on its side.\",\n    img: uranusImg\n  },\n  neptune: {\n    desc: \"Neptune is farthest from the Sun.\",\n    img: neptuneImg\n  },\n  pluto: {\n    desc: \"Pluto is a dwarf planet.\",\n    img: plutoImg\n  }\n};\nconst PlanetPage = () => {\n  _s();\n  const {\n    planetName\n  } = useParams();\n  const navigate = useNavigate();\n  if (!planetName || !planetInfo[planetName]) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u041F\\u043E\\u043C\\u0438\\u043B\\u043A\\u0430: \\u041F\\u043B\\u0430\\u043D\\u0435\\u0442\\u0430 \\u043D\\u0435 \\u0437\\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n  const planet = planetInfo[planetName];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"planet-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: planetName.charAt(0).toUpperCase() + planetName.slice(1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: planet.img,\n      alt: planetName,\n      className: \"planets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: planet.desc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back-button\",\n      onClick: () => navigate(-1),\n      children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(PlanetPage, \"c8VgdF7PM41omptBNh1GhCw6NsQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = PlanetPage;\nexport default PlanetPage;\nvar _c;\n$RefreshReg$(_c, \"PlanetPage\");","map":{"version":3,"names":["React","useParams","useNavigate","mercuryImg","venusImg","earthImg","marsImg","jupiterImg","saturnImg","uranusImg","neptuneImg","plutoImg","jsxDEV","_jsxDEV","planetInfo","mercury","desc","img","venus","earth","mars","jupiter","saturn","uranus","neptune","pluto","PlanetPage","_s","planetName","navigate","children","fileName","_jsxFileName","lineNumber","columnNumber","planet","className","charAt","toUpperCase","slice","src","alt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/admin/my-react-app/src/components/Planets.js"],"sourcesContent":["import React from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport \"../style.css\";\r\n\r\nimport mercuryImg from \"../assets/Mercury.jpg\";\r\nimport venusImg from \"../assets/venus.jpg\";\r\nimport earthImg from \"../assets/earth.jpg\";\r\nimport marsImg from \"../assets/mars.jpg\";\r\nimport jupiterImg from \"../assets/jupiter.jpg\";\r\nimport saturnImg from \"../assets/saturn.jpg\";\r\nimport uranusImg from \"../assets/uranus.jpg\";\r\nimport neptuneImg from \"../assets/neptune.jpg\";\r\nimport plutoImg from \"../assets/pluto.jpg\";\r\n\r\nconst planetInfo = {\r\n  mercury: { desc: \"Mercury is the smallest planet.\", img: mercuryImg },\r\n  venus: { desc: \"Venus has a thick atmosphere.\", img: venusImg },\r\n  earth: { desc: \"Earth supports life.\", img: earthImg },\r\n  mars: { desc: \"Mars is the Red Planet.\", img: marsImg },\r\n  jupiter: { desc: \"Jupiter is the biggest planet.\", img: jupiterImg },\r\n  saturn: { desc: \"Saturn has beautiful rings.\", img: saturnImg },\r\n  uranus: { desc: \"Uranus rotates on its side.\", img: uranusImg },\r\n  neptune: { desc: \"Neptune is farthest from the Sun.\", img: neptuneImg },\r\n  pluto: { desc: \"Pluto is a dwarf planet.\", img: plutoImg },\r\n};\r\n\r\nconst PlanetPage = () => {\r\n  const { planetName } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  if (!planetName || !planetInfo[planetName]) {\r\n    return <h2>Помилка: Планета не знайдена</h2>;\r\n  }\r\n\r\n  const planet = planetInfo[planetName];\r\n\r\n  return (\r\n    <div className=\"planet-container\">\r\n      <h1>{planetName.charAt(0).toUpperCase() + planetName.slice(1)}</h1>\r\n      <img src={planet.img} alt={planetName} className=\"planets\" />\r\n      <p>{planet.desc}</p>\r\n      <button className=\"back-button\" onClick={() => navigate(-1)}>Назад</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlanetPage;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}