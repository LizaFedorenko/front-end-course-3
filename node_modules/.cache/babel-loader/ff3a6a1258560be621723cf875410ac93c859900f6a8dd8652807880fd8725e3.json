{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\my-react-app\\\\src\\\\components\\\\TopicPage.js\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopicPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [topic, setTopic] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState(\"\"); // новий коментар\n  const user = JSON.parse(localStorage.getItem(\"user\")); // автор коментаря\n\n  useEffect(() => {\n    axios.get(`http://localhost:3001/topics/${id}`).then(res => {\n      setTopic(res.data);\n    });\n    axios.get(`http://localhost:3001/topics/${id}/comments`).then(res => {\n      setComments(res.data);\n    });\n  }, [id]);\n  const handleAddComment = async () => {\n    if (!newComment.trim()) {\n      alert(\"Введіть текст коментаря!\");\n      return;\n    }\n    if (!user || !user.id) {\n      alert(\"Потрібно авторизуватись, щоб залишити коментар.\");\n      return;\n    }\n    try {\n      const response = await axios.post(`http://localhost:3001/topics/${id}/comments`, {\n        text: newComment,\n        user_id: user.id // хто написав\n      });\n\n      // Оновлюємо список коментарів\n      setComments(prev => [...prev, response.data]);\n      setNewComment(\"\"); // очищення поля\n    } catch (error) {\n      var _error$response;\n      console.error(\"Помилка при додаванні коментаря:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    }\n  };\n  if (!topic) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u0417\\u0430\\u0432\\u0430\\u043D\\u0442\\u0430\\u0436\\u0435\\u043D\\u043D\\u044F \\u0442\\u0435\\u043C\\u0438...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"topic-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"topic-title\",\n      children: topic.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"topic-content\",\n      children: topic.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"comments-title\",\n      children: \"\\u041A\\u043E\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0456\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), comments.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"comments\",\n      children: \"\\u041A\\u043E\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0456 \\u0432\\u0456\\u0434\\u0441\\u0443\\u0442\\u043D\\u0456.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : comments.map((c, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: c.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"3\",\n        value: newComment,\n        onChange: e => setNewComment(e.target.value),\n        placeholder: \"\\u041D\\u0430\\u043F\\u0438\\u0448\\u0456\\u0442\\u044C \\u0432\\u0430\\u0448 \\u043A\\u043E\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddComment,\n        children: \"\\u0421\\u0442\\u0432\\u043E\\u0440\\u0438\\u0442\\u0438 \\u043A\\u043E\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(TopicPage, \"DQ3JYX+yEUUNacgW8PmdhP3ZpWQ=\", false, function () {\n  return [useParams];\n});\n_c = TopicPage;\nexport default TopicPage;\nvar _c;\n$RefreshReg$(_c, \"TopicPage\");","map":{"version":3,"names":["useParams","useEffect","useState","axios","jsxDEV","_jsxDEV","TopicPage","_s","id","topic","setTopic","comments","setComments","newComment","setNewComment","user","JSON","parse","localStorage","getItem","get","then","res","data","handleAddComment","trim","alert","response","post","text","user_id","prev","error","_error$response","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","content","length","map","c","i","rows","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/admin/my-react-app/src/components/TopicPage.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst TopicPage = () => {\r\n  const { id } = useParams();\r\n  const [topic, setTopic] = useState(null);\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState(\"\"); // новий коментар\r\n  const user = JSON.parse(localStorage.getItem(\"user\")); // автор коментаря\r\n\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:3001/topics/${id}`).then((res) => {\r\n      setTopic(res.data);\r\n    });\r\n    axios.get(`http://localhost:3001/topics/${id}/comments`).then((res) => {\r\n      setComments(res.data);\r\n    });\r\n  }, [id]);\r\n\r\n  const handleAddComment = async () => {\r\n    if (!newComment.trim()) {\r\n      alert(\"Введіть текст коментаря!\");\r\n      return;\r\n    }\r\n\r\n    if (!user || !user.id) {\r\n      alert(\"Потрібно авторизуватись, щоб залишити коментар.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(`http://localhost:3001/topics/${id}/comments`, {\r\n        text: newComment,\r\n        user_id: user.id, // хто написав\r\n      });\r\n\r\n      // Оновлюємо список коментарів\r\n      setComments((prev) => [...prev, response.data]);\r\n      setNewComment(\"\"); // очищення поля\r\n    } catch (error) {\r\n      console.error(\"Помилка при додаванні коментаря:\", error.response?.data || error.message);\r\n    }\r\n  };\r\n\r\n  if (!topic) return <p>Завантаження теми...</p>;\r\n\r\n  return (\r\n    <div className=\"topic-page\">\r\n      <h2 className=\"topic-title\">{topic.title}</h2>\r\n      <p className=\"topic-content\">{topic.content}</p>\r\n\r\n      <h3 className=\"comments-title\">Коментарі</h3>\r\n      {comments.length === 0 ? (\r\n        <p className=\"comments\">Коментарі відсутні.</p>\r\n      ) : (\r\n        comments.map((c, i) => (\r\n          <div key={i} className=\"comment\">\r\n            <p>{c.text}</p>\r\n          </div>\r\n        ))\r\n      )}\r\n\r\n      {/* Форма додавання коментаря */}\r\n      <div className=\"comment-form\">\r\n        <textarea\r\n          rows=\"3\"\r\n          value={newComment}\r\n          onChange={(e) => setNewComment(e.target.value)}\r\n          placeholder=\"Напишіть ваш коментар...\"\r\n        />\r\n        <button onClick={handleAddComment}>Створити коментар</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopicPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}